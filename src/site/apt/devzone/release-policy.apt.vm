 ----
 Release Policy
 ----
 Vojtech Szocs
 ----
 13 March 2009
 ----

Release Policy
  
  ${df} uses the following policy for official project releases:
  
  * <Preparing release>
  
    * Create new tag from the target branch.
  
    * Update project versions within <<<pom.xml>>> files and commit changes.
  
  []
  
  * <Deploying artifacts into remote repository>
  
    * Within the tag root directory, execute " <<<mvn clean deploy -Prelease>>> "
  
  []
  
  * <Deploying project site into remote web server>
  
    * Within the site root directory, execute " <<<mvn clean site-deploy>>> "
  
  []
  
* Release versioning
  
  Each release has a version in format <<<major.minor.bugfix>>>:
  
  * <<<major>>> number change indicates fundamental changes in project architecture that may break backwards compatibility
  
  * <<<minor>>> number change indicates new functionality that may cause slight API changes
  
  * <<<bugfix>>> number change indicates bugfixes, performance enhancements and minor functionality additions that don't break the general API
  
* General conventions
  
  Each tag should be created from a corresponding <maintenance branch> upon a new project release. Maintenance branch is a branch that follows
  the <<<major.minor.x>>> naming convention. Only bugfixes, performance enhancements and minor functionality additions that don't break the general
  API may be committed to the maintenance branch.
  
  Exactly one <${df-site}> project is maintained for each maintenance branch. The site project needs to be updated upon any changes done within
  the branch as soon as possible. This includes site contents as well as the release changelog.
  
  New functionality that may cause slight API changes should result in creating a new maintenance branch and a corresponding site project.
  
* Maven artifact versioning
  
  Artifact versions within <<<pom.xml>>> files reflect the versioning policy in a way that is appropriate for Maven projects:
  
  * <<<SNAPSHOT>>> for the trunk
  
  * <<<major.minor-SNAPSHOT>>> for maintenance branches
  
  * <<<major.minor.bugfix>>> for tags (releases)
